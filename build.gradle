plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.153'
}

version = '1.4.0'
group = 'dev.gigaherz.playertemplate' // http://maven.apache.org/guides/mini/guide-naming-conventions.html

Provider<String> minecraftVersion(Transformer<String, String> mapper) {
    return project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion).map(mapper)
}

base {
    archivesName = minecraftVersion { "PlayerTemplate-${it}" }
}


// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        workingDirectory project.file('run')

        modSource project.sourceSets.main
    }

    client {
    }

    server {
    }
}

subsystems {
    parchment {
        minecraftVersion="1.20.4"
        mappingsVersion="2024.04.14"
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:21.0.86-beta'
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title"     : "playertemplate",
                "Specification-Vendor"    : "gigaherz",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

project.afterEvaluate {
    publish.dependsOn('reobfJar')
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.archivesBaseName
                from components.java
            }
        }

        repositories {
            if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
                System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
                maven {
                    url System.env.giga_maven_host
                    credentials {
                        username System.env.giga_maven_user
                        password System.env.giga_maven_password
                    }
                }
            }
            else {
                System.out.println("Remote publish disabled.")
                maven {
                    url "$projectDir/../CommonMaven"
                }
            }
        }
    }
}
